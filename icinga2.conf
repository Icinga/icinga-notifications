if (!globals.contains("NomaProcessEventUrl")) {
	const NomaProcessEventUrl = "http://localhost:5680/process-event"
}
if (!globals.contains("NomaIcingaWebUrl")) {
	const NomaIcingaWebUrl = "http://localhost/icingaweb2"
}

object User "noma" {}

var hostBody = {
	"" = {
		skip_key = true
		value = NomaProcessEventUrl
	}
	"-d" = {{
		var args = {}
		args.tags.host = macro("$event_hostname$")
		args.name = macro("$event_object_name$")
		args.username = macro("$event_author$")
		args.message = macro("$event_message$")
		args.url = macro("$event_action_url$")

		var type = macro("$event_type$")
		if (len(type) > 0) {
			args.type = type
		}

		var severity = macro("$event_severity$")
		if (len(severity) > 0) {
			args.severity = severity
		}

		var extraTags = macro("$event_extra_tags$")
		if (extraTags.len() > 0) {
			args.extra_tags = extraTags
		}

		return Json.encode(args)
	}}
}

var hostExtraTags = {{
	var tags = {}
	for (group in host.groups) {
	  tags.set("hostgroup/" + group, null)
	}

	return tags
}}

object NotificationCommand "noma-host-notification" use(hostBody, hostExtraTags) {
	command = [ "curl" ]

	arguments = hostBody

	vars += {
		event_hostname = "$host.name$"
		event_author = "$notification.author$"
		event_message = "$notification.comment$"
		event_object_name = "$host.display_name$"
		event_action_url = NomaIcingaWebUrl + "/icingadb/host?name=$host.name$"
		event_extra_tags = hostExtraTags
	}

	vars.event_type = {{
		if (macro("$notification.type$") == "ACKNOWLEDGEMENT") {
			return "acknowledgement"
		}

		return ""
	}}

	vars.event_severity = {{
		if (macro("$notification.type$") != "ACKNOWLEDGEMENT") {
			return macro("$host.state$") == "DOWN" ? "crit" : "ok"
		}

		return ""
	}}
}

object EventCommand "noma-host-events-forwarder" use(hostBody, hostExtraTags) {
	command = [ "curl" ]

	arguments = hostBody

	vars += {
		event_hostname = "$host.name$"
		event_author = ""
		event_message = "$host.output$"
		event_object_name = "$host.display_name$"
		event_action_url = NomaIcingaWebUrl + "/icingadb/host?name=$host.name$"
		event_extra_tags = hostExtraTags
	}

	vars.event_severity = {{
		if (macro("$host.state_type$") == "HARD") {
			return macro("$host.state$") == "DOWN" ? "crit" : "ok"
		}

		return ""
	}}
}

template Host "generic-noma-host" default {
	event_command = "noma-host-events-forwarder"
}

apply Notification "noma-notifier" to Host {
	command = "noma-host-notification"

	states = [ Up, Down ]
	types = [ Problem, Acknowledgement, Recovery ]

	users = [ "noma" ]

	assign where true
}

var serviceBody = {
	 "" = {
		skip_key = true
		value = NomaProcessEventUrl
	 }
	 "-d" = {{
		 var args = {}
		 args.tags.host = macro("$event_hostname$")
		 args.tags.service = macro("$event_servicename$")
		 args.name = macro("$event_object_name$")
		 args.username = macro("$event_author$")
		 args.message = macro("$event_message$")
		 args.url = macro("$event_action_url$")

		 var type = macro("$event_type$")
		 if (len(type) > 0) {
			 args.type = type
		 }

		 var severity = macro("$event_severity$")
		 if (len(severity) > 0) {
			 args.severity = severity
		 }

		 var extraTags = macro("$event_extra_tags$")
		 if (extraTags.len() > 0) {
			 args.extra_tags = extraTags
		 }

		 return Json.encode(args)
	}}
}

var serviceExtraTags = {{
	 var tags = {}
	 for (group in service.host.groups) {
	   tags.set("hostgroup/" + group, null)
	 }

	 for (group in service.groups) {
	   tags.set("servicegroup/" + group, null)
	 }

	 return tags
}}

object NotificationCommand "noma-service-notification" use(serviceBody, serviceExtraTags) {
	command = [ "curl" ]

	arguments = serviceBody

	vars += {
		event_hostname = "$service.host.name$"
		event_servicename = "$service.name$"
		event_author = "$notification.author$"
		event_message = "$notification.comment$"
		event_object_name = "$service.display_name$"
		event_action_url = NomaIcingaWebUrl + "/icingadb/service?name=$service.name$&host.name=$service.host.name$"
		event_extra_tags = serviceExtraTags
	}

	vars.event_type = {{
		if (macro("$notification.type$") == "ACKNOWLEDGEMENT") {
			return "acknowledgement"
		}

		return ""
	}}

	vars.event_severity = {{
		if (macro("$notification.type$") != "ACKNOWLEDGEMENT") {
			var state = macro("$service.state$")
			if (state == "OK") {
				return "ok"
			} else if (state == "WARNING") {
				return "warning"
			} else if (state == "CRITICAL") {
				return "crit"
			} else { // Unknown
				return "err"
			}
		}

		return ""
	}}
}

object EventCommand "noma-service-events-forwarder" use(serviceBody, serviceExtraTags) {
	command = [ "curl" ]

	arguments = serviceBody

	vars += {
		event_hostname = "$service.host.name$"
		event_servicename = "$service.name$"
		event_author = ""
		event_message = "$service.output$"
		event_object_name = "$service.display_name$"
		event_action_url = NomaIcingaWebUrl + "/icingadb/service?name=$service.name$&host.name=$service.host.name$"
		event_extra_tags = serviceExtraTags
	}

	vars.event_severity = {{
		if (macro("$service.state_type$") == "HARD") {
			var state = macro("$service.state$")
			if (state == "OK") {
				return "ok"
			} else if (state == "WARNING") {
				return "warning"
			} else if (state == "CRITICAL") {
				return "crit"
			} else { // Unknown
				return "err"
			}
		}

		return ""
	}}
}

template Service "generic-noma-service" default {
	event_command = "noma-service-events-forwarder"
}

apply Notification "noma-notifier" to Service {
	command = "noma-service-notification"

	states = [ OK, Warning, Critical, Unknown ]
	types = [ Problem, Acknowledgement, Recovery ]

	users = [ "noma" ]

	assign where true
}
